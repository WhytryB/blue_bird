import base64

def decode_base64_to_file(base64_string, output_file_path):
    # Декодируем строку base64 обратно в бинарные данные
    decoded_data = base64.b64decode(base64_string)
    # Записываем декодированные данные в файл
    with open(output_file_path, "wb") as output_file:
        output_file.write(decoded_data)
    print("Файл успешно восстановлен.")

# Пример использования функции
base64_string = ""  # Ваша строка base64
output_file_path = "restored_file.pdf"  # Путь, куда нужно сохранить восстановленный файл
decode_base64_to_file(base64_string, output_file_path)